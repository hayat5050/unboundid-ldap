# This file may be used to specify default values to use for
# in-memory-directory-server arguments that were not provided by the command
# line.  Note that although it was generated for the in-memory-directory-server
# tool, it may contain default values for any number of other tools that use
# the same arguments.  This allows a single properties file to be used in
# conjunction with multiple tools.
#
# When invoking an applicable tool like in-memory-directory-server, you may
# indicate that this properties file should be used by launching the tool with
# the propertiesFilePath argument and specifying the path to this file.
# Alternately, the com.unboundid.util.args.ArgumentParser.propertiesFilePath
# Java property or the UNBOUNDID_TOOL_PROPERTIES_FILE_PATH environment variable
# may be set to the path to the properties file that should be used.  The
# noPropertiesFile argument may be used to indicate that the tool should not
# use any properties file and that it should only use the argument values
# provided on the command line.
#
# Each property listed in this file should be a name-value pair in which the
# name and the value are separated by an equal sign.  The name of the property
# should be the name of the argument for which you wish to specify a default
# value.  It may either be the argument name on its own (which will be used for
# any tool that offers that argument), or it may consist of the tool name, a
# period, and the argument name (which will only be used for the specified
# tool).  For example, a property name of 'toolName.argName' will only be used
# to specify the value for the argName argument for the toolName tool, while a
# property name of 'argName' will be used to specify the value for any tool
# that supports the argName argument.  Similarly, if the tool supports
# subcommands, then the property name may consist of the tool name, a period,
# the subcommand name, a period, and the argument name (e.g.,
# 'toolName.subCommandName.argName'), and the property will only be used in
# conjunction with the specified subcommand.  A property that includes a
# subcommand name will take precedence over a property that does not include a
# subcommand name, and a property that includes a tool name will take
# precedence over a property that does not include a tool name.
#
# If an argument supports multiple values, then the same property may appear
# multiple times with each of the desired default values.  The values will be
# used in the order that they appear in the properties file.
#
# The following properties are supported for use with the
# 'in-memory-directory-server' tool:


# The port on which the server should listen for client requests.  If a value
# is specified, then it must be an integer between 1 and 65535.  If no port is
# specified, then the server will automatically select a free port to use.
#
# The specified value must not be less than 0 or greater than 65,535.
#
# in-memory-directory-server.port={port} 
in-memory-directory-server.port=54321


# Indicates that the server should encrypt all communication using SSL.  If
# this argument is provided, then the "--keyStorePath" and "--keyStorePassword"
# arguments must also be given, and the "--useStartTLS" argument must not be
# given.
#
# in-memory-directory-server.useSSL={true|false}


# Indicates that the server should support the use of the StartTLS extended
# operation to encrypt all subsequent communication.  If this argument is
# provided, then the "--keyStorePath" and "--keyStorePassword" arguments must
# also be given, and the "--useSSL" argument must not be given.
#
# in-memory-directory-server.useStartTLS={true|false}


# The path to the Java key store file that will be used to obtain the
# certificate to use for SSL communication.  This may only be provided if
# either the "--useSSL" or "--useStartTLS" argument is also given.
#
# The specified path must refer to a file that exists.
#
# in-memory-directory-server.keyStorePath={path}


# The password to use to access the contents of the SSL key store.  This may
# only be provided if either the "--useSSL" or "--useStartTLS" argument is also
# given.
#
# in-memory-directory-server.keyStorePassword={password}


# The keystore type.
#
# in-memory-directory-server.keyStoreType={type}


# The path to the Java trust store file that will be used to determine whether
# to trust any client certificates presented to the server.  This may only be
# provided if either the "--useSSL" or "--useStartTLS" argument is given, but
# if SSL or StartTLS is to be used and no trust store path is specified, then
# the server will automatically trust any client certificate presented to it.
#
# The specified path must refer to a file that exists.
#
# in-memory-directory-server.trustStorePath={path}


# The password to use to access the contents of the SSL trust store.  This may
# only be provided if the "--trustStorePath" argument is also given.  If a
# trust store path is specified but no trust store password is given, then the
# server will attempt to access the trust store contents without a password.
#
# in-memory-directory-server.trustStorePassword={password}


# The trust store type.
#
# in-memory-directory-server.trustStoreType={type}


# The base DN to use for the server.  Only entries at or below one of the
# defined base DNs may be created in the server.  At least one base DN must be
# defined, but multiple base DNs may be specified as separate arguments.
#
# A provided value must be able to be parsed as an LDAP distinguished name as
# described in RFC 4514.
#
# in-memory-directory-server.baseDN={baseDN}
in-memory-directory-server.baseDN=dc=netplus,dc=local

# The path to an LDIF file containing an initial set of data to use to populate
# the server.  If this is not provided, then the server will initially be
# empty.
#
# The specified path must refer to a file that exists.
#
# in-memory-directory-server.ldifFile={path}
in-memory-directory-server.ldifFile=conf/ldap.ldif

# An additional DN that may be used to bind to the server even if the specified
# user does not exist in the data set.  If this is provided, then the
# "--additionalBindPassword" argument must also be given.
#
# A provided value must be able to be parsed as an LDAP distinguished name as
# described in RFC 4514.
#
# in-memory-directory-server.additionalBindDN={bindDN}
# in-memory-directory-server.additionalBindDN=cn=Manager,dc=netplus,dc=local

# The password that should be used to authenticate when using the DN specified
# with the "--additionalBindDN" argument.
#
# in-memory-directory-server.additionalBindPassword={password}
# in-memory-directory-server.additionalBindPassword=plus321

# Indicates that the server should use a default set of standard schema.
#
# in-memory-directory-server.useDefaultSchema={true|false}


# The path to a file or directory containing schema definitions to use for the
# server.  If the path specified is a file, then it must be an LDIF file
# containing a single entry that is a valid LDAP subschema subentry.  If the
# path specified is a directory, then any files contained in it will be
# examined in lexicographic order by name to create an aggregate schema.
#
# The specified path must refer to a file that exists.
#
# in-memory-directory-server.useSchemaFile={path}


# Maintain an equality index for the specified attribute.  The server must be
# configured to use a schema (which may optionally be the default standard
# schema), and the specified attribute type must be defined in the schema.
#
# in-memory-directory-server.equalityIndex={attr}


# The maximum number of LDAP changelog entries that should be maintained by the
# server.  If this is not provided, then the server will not maintain a
# changelog.
#
# The specified value must not be less than 0 or greater than 2,147,483,647.
#
# in-memory-directory-server.maxChangeLogEntries={count}


# The value to include in the vendorName argument of the server root DSE.
#
# in-memory-directory-server.vendorName={value}


# The value to include in the vendorVersion argument of the server root DSE.
#
# in-memory-directory-server.vendorVersion={value}


# Indicates that access log information should be written to standard output.
# This cannot be used in conjunction with the ''--accessLogFile'' argument.  If
# neither argument is provided, then no access logging will be performed.
#
# in-memory-directory-server.accessLogToStandardOut={true|false}


# The path to a file to which access log information should be written about
# operations processed by the server.  This cannot be used in conjunction with
# the ''--accessLogToStandardOut'' argument.  If neither argument is provided,
# then no access logging will be performed.
#
# The specified path must refer to a file which may or may not exist, but whose
# parent directory must exist.
#
# in-memory-directory-server.accessLogFile={path}


# Indicates that LDAP debug log information should be written to standard
# output.  This cannot be used in conjunction with the ''--ldapDebugLogFile''
# argument.  If neither argument is provided, then no LDAP debug logging will
# be performed.
#
# in-memory-directory-server.ldapDebugLogToStandardOut={true|false}
in-memory-directory-server.ldapDebugLogToStandardOut=true

# The path to a file to which detailed information should be written about the
# LDAP communication performed by the server.  This cannot be  used in
# conjunction with the ''--ldapDebugLogToStandardOut'' argument.  If neither
# argument is provided, then no LDAP debug logging will be performed.
#
# The specified path must refer to a file which may or may not exist, but whose
# parent directory must exist.
#
# in-memory-directory-server.ldapDebugLogFile={path}
in-memory-directory-server.ldapDebugLogFile=/opt/unboundid-ldap/log/debug.log

# The path to a file to which the server should write generated code that may
# be used to recreate the requests received from clients.  If this argument is
# not provided, then no code logging will be performed.
#
# The specified path must refer to a file which may or may not exist, but whose
# parent directory must exist.
#
# in-memory-directory-server.codeLogFile={path}
